/**/

--3
SELECT BOOK_NO, BOOK_NM
FROM TB_BOOK
WHERE LENGTH(BOOK_NM)>=25;

--4
SELECT WRITER_NM, OFFICE_TELNO, HOME_TELNO, MOBILE_NO
FROM TB_WRITER
WHERE WRITER_NM = (SELECT A.WRITER_NM

                    FROM 
                            (SELECT WRITER_NM 
                            FROM TB_WRITER
                            WHERE MOBILE_NO IS NOT NULL 
                            AND SUBSTR(MOBILE_NO,1,3)='019'
                            AND WRITER_NM LIKE '김%'
                            ORDER BY WRITER_NM) A
                    
                    WHERE ROWNUM =1);

--5
SELECT COUNT(DISTINCT WRITER_NO) AS "작가(명)"
FROM TB_BOOK_AUTHOR
WHERE COMPOSE_TYPE LIKE '%옮김%';

--6
SELECT '지음' AS COMPOSE_TYPE , COUNT(COMPOSE_TYPE)
FROM TB_BOOK_AUTHOR
WHERE COMPOSE_TYPE LIKE '지음%'
UNION
SELECT '엮음' AS COMPOSE_TYPE , COUNT(COMPOSE_TYPE)
FROM TB_BOOK_AUTHOR
WHERE COMPOSE_TYPE LIKE '엮음%'
ORDER BY COMPOSE_TYPE DESC;

--7
SELECT BOOK_NM, ISSUE_DATE, PUBLISHER_NM
FROM TB_BOOK
WHERE ISSUE_DATE = (SELECT MAX(ISSUE_DATE)
                    FROM TB_BOOK);

--8
SELECT 작가이름, 권수
FROM (SELECT WRITER_NO, WRITER_NM AS 작가이름 ,COUNT(*) AS "권수" 
    FROM TB_BOOK_AUTHOR
    JOIN TB_WRITER USING(WRITER_NO)
    GROUP BY WRITER_NO, WRITER_NM
    ORDER BY COUNT(*)DESC)
WHERE ROWNUM <=3;

--9
UPDATE TB_WRITER W 
SET REGIST_DATE = (
                    SELECT MIN(A.ISSUE_DATE)
                    FROM TB_BOOK A
                    JOIN TB_BOOK_AUTHOR B ON A.BOOK_NO = B.BOOK_NO
                    WHERE B.WRITER_NO = W.WRITER_NO
                    )
WHERE W.REGIST_DATE IS NULL;

COMMIT;

--10
CREATE TABLE TB_BOOK_TRANSLATOR(
    BOOK_NO VARCHAR2(10) NOT NULL CONSTRAINT BOOK_TRANSLATOR_01 REFERENCES TB_BOOK,
    WRITER_NO VARCHAR2(10) NOT NULL CONSTRAINT BOOK_TRANSLATOR_02 REFERENCES TB_WRITER,
    TRANS_LANG VARCHAR2(60),
    CONSTRAINT BOOK_TRANSLATOR PRIMARY KEY (BOOK_NO, WRITER_NO)    
);
DROP TABLE TB_BOOK_TRANSLATOR;

COMMENT ON COLUMN TB_BOOK_TRANSLATOR.BOOK_NO IS '도서 번호';
COMMENT ON COLUMN TB_BOOK_TRANSLATOR.WRITER_NO IS '작가 번호';
COMMENT ON COLUMN TB_BOOK_TRANSLATOR.TRANS_LANG IS '번역 언어';

--11

INSERT INTO TB_BOOK_TRANSLATOR (BOOK_NO, WRITER_NO)
SELECT BOOK_NO, WRITER_NO 
FROM TB_BOOK_AUTHOR 
WHERE COMPOSE_TYPE IN ('옮김', '역주', '편역', '공역');

DELETE FROM TB_BOOK_AUTHOR
WHERE COMPOSE_TYPE IN ('옮김', '역주', '편역', '공역');

--12
SELECT BOOK_NM, WRITER_NM, ISSUE_DATE
FROM TB_BOOK_TRANSLATOR
JOIN TB_BOOK USING(BOOK_NO)
JOIN TB_WRITER USING(WRITER_NO)
WHERE SUBSTR(ISSUE_DATE,1,2)='07';

--13
GRANT CREATE VIEW TO final;

CREATE VIEW VW_BOOK_TRANSLATOR
AS SELECT BOOK_NM, WRITER_NM, ISSUE_DATE
FROM TB_BOOK_TRANSLATOR
JOIN TB_BOOK USING(BOOK_NO)
JOIN TB_WRITER USING(WRITER_NO)
WHERE SUBSTR(ISSUE_DATE,1,2)='07'
WITH READ ONLY;

SELECT * FROM VW_BOOK_TRANSLATOR;

--14
INSERT INTO TB_PUBLISHER (PUBLISHER_NM, PUBLISHER_TELNO, DEAL_YN)
VALUES ('춘 출판사', '02-6710-3737', DEFAULT);
COMMIT;

--15
SELECT A.WRITER_NM, COUNT(*)
FROM TB_WRITER A, TB_WRITER B
WHERE A.WRITER_NO <> B.WRITER_NO
AND A.WRITER_NM = B.WRITER_NM
GROUP BY A.WRITER_NM;

--16
UPDATE TB_BOOK_AUTHOR
SET COMPOSE_TYPE = '지음'
WHERE COMPOSE_TYPE IS NULL;
COMMIT;

--17
SELECT WRITER_NM, OFFICE_TELNO
FROM TB_WRITER
WHERE SUBSTR(OFFICE_TELNO, 1, 3) LIKE '%02%'
AND OFFICE_TELNO LIKE '%-___-%';

--18
SELECT WRITER_NM
FROM TB_WRITER
WHERE REGIST_DATE < TO_DATE('1976-01-01', 'YYYY-MM-DD')
ORDER BY WRITER_NM;

--19
SELECT BOOK_NM 도서명, PRICE 가격, 
CASE WHEN STOCK_QTY < 5 THEN '추가주문필요'
    ELSE '소량보유'
  END AS 재고상태
FROM TB_BOOK
WHERE PUBLISHER_NM ='황금가지'
AND STOCK_QTY <10
ORDER BY STOCK_QTY DESC;


--20
SELECT A.BOOK_NM 도서명, C.WRITER_NM 저자, D.WRITER_NM 역자
FROM TB_BOOK A
JOIN TB_BOOK_AUTHOR B ON (A.BOOK_NO = B.BOOK_NO )
JOIN TB_WRITER C ON (B.WRITER_NO =C.WRITER_NO)
JOIN TB_BOOK_TRANSLATOR T ON (A.BOOK_NO = T.BOOK_NO)
JOIN TB_WRITER D ON T.WRITER_NO = D.WRITER_NO
WHERE A.BOOK_NM LIKE '%아타트롤%'
AND A.BOOK_NO=T.BOOK_NO ;

--21
SELECT 
    BOOK_NM AS "도서명",
    STOCK_QTY AS "재고 수량",
    PRICE AS "가격(ORG)",
    ROUND(PRICE * 0.8, 0) AS "가격(NEW)"
FROM TB_BOOK
WHERE ISSUE_DATE < ADD_MONTHS(SYSDATE, -360)
  AND STOCK_QTY >= 90
ORDER BY STOCK_QTY DESC, PRICE DESC, BOOK_NM;

/*
UPDATE TB_BOOK
SET PRICE = PRICE*0.8
WHERE ISSUE_DATE <  ADD_MONTHS(SYSDATE, -360) AND STOCK_QTY>=90;
*/

