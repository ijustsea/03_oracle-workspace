/*트리거 실습예저*/

CREATE TABLE TB_SCORE(
    SNUM NUMBER PRIMARY KEY,
    NAME VARCHAR2(20),
    KOREAN NUMBER NOT NULL,
    ENGLISH NUMBER NOT NULL, 
    MATH NUMBER NOT NULL
);

CREATE TABLE TB_GRADE(
    SNUM NUMBER REFERENCES TB_SCORE(SNUM),
    TOTALSCORE NUMBER,
    AVG NUMBER,
    RANK NUMBER    
);

--INSERT TRG 
CREATE OR REPLACE TRIGGER TRG_03
AFTER INSERT ON TB_SCORE
FOR EACH ROW
BEGIN 
 
        INSERT INTO TB_GRADE (SNUM, TOTALSCORE, AVG)        
        VALUES (
        :NEW.SNUM,
        :NEW.KOREAN + :NEW.ENGLISH + :NEW.MATH,
        ROUND((:NEW.KOREAN + :NEW.ENGLISH + :NEW.MATH) / 3,1)
    );  
    PROC_RANK; 
END;
/

DELETE FROM TB_SCORE;
ROLLBACK;
CREATE SEQUENCE SEQ_SNUM
START WITH 100
NOCACHE;


INSERT INTO TB_SCORE VALUES(SEQ_SNUM.NEXTVAL, '김이찬', 90, 80,70);
INSERT INTO TB_SCORE VALUES(SEQ_SNUM.NEXTVAL, '김수정', 80, 80,80);
INSERT INTO TB_SCORE VALUES(SEQ_SNUM.NEXTVAL, '김혜지', 100, 100,100);

--UPDATE TRG 
CREATE OR REPLACE TRIGGER TRG_04
AFTER UPDATE ON TB_SCORE
FOR EACH ROW
DECLARE 
    OLDSUM NUMBER := :OLD.KOREAN  + :OLD.ENGLISH  + :OLD.MATH;
    NEWSUM NUMBER := :NEW.KOREAN  + :NEW.ENGLISH  + :NEW.MATH;
BEGIN 
    IF(OLDSUM != NEWSUM )
        THEN
            UPDATE TB_GRADE
            SET TOTALSCORE = :NEW.KOREAN + :NEW.ENGLISH + :NEW.MATH,
            AVG = ROUND((:NEW.KOREAN + :NEW.ENGLISH + :NEW.MATH) / 3,1)
            WHERE SNUM = :NEW.SNUM;
    END IF;   
    PROC_RANK; 
END;
/

UPDATE TB_SCORE 
SET MATH =80
WHERE NAME ='김이찬';

--순위 계산하는 프로시저 만들기
CREATE OR REPLACE PROCEDURE PROC_RANK AS
BEGIN
MERGE INTO TB_GRADE A
  
  USING (--서브쿼리나 테이블
    SELECT SNUM, DENSE_RANK() OVER (ORDER BY TOTALSCORE DESC) AS NEW_RANK
    FROM TB_GRADE
  ) B
  
  ON (A.SNUM = B.SNUM) --조건절 : 서브쿼리의 이름과 본테이블의 이름이 같다면
  
  WHEN MATCHED THEN--조건일치하는경우
    UPDATE SET A.RANK = B.NEW_RANK;

END PROC_RANK;
/

DROP TABLE TB_SCORE;
DROP TABLE TB_GRADE;

--DELETE TRG
CREATE OR REPLACE TRIGGER TRG_05
AFTER DELETE ON TB_SCORE
FOR EACH ROW
BEGIN 
    DELETE FROM TB_GRADE      
    WHERE SNUM = :OLD.SNUM;
     
    PROC_RANK; 
END;
/

DELETE FROM TB_SCORE
WHERE NAME ='김이찬';

--쌤 프로시져
CREATE OR REPLACE PROCEDURE PROC_UPDATE_RANK IS 
BEGIN 
    UPDATE TB_GRADE G
    SET RANK = (SELECT RN
                FROM (SELECT SNUM, RANK() OVER(ORDER BY TOTALSCORE DESC) AS RN
                       FROM TB_GRADE ) S 
                WHERE G.SNUM = S.SNUM
                );
END;
/

--프로시저 트리거 만들기
CREATE OR REPLACE TRIGGER TRG_07
AFTER INSERT OR UPDATE ON TB_SCORE
BEGIN 
    PROC_UPDATE_RANK();
END;
/



