--김기석-1
select PNAME, TO_CHAR(BUY_DATE +10, 'MM"월"DD"일"')
from TBL_BUY
JOIN TBL_PRODUCT USING(PCODE)
WHERE CUSTOMID = 'hongGD';

--김기석-2
SELECT  *
FROM TBL_CUSTOM
WHERE EMAIL LIKE '___@%' 
AND EMAIL LIKE '%@_____.%' ;

--김수정-1
SELECT CUSTOM_ID, NAME, SUM(QUANTITY), SUM(QUANTITY*PRICE)
FROM TBL_CUSTOM
JOIN TBL_BUY ON (CUSTOM_ID = CUSTOMID)
JOIN TBL_PRODUCT USING(PCODE)
GROUP BY CUSTOM_ID, NAME
ORDER BY SUM(QUANTITY*PRICE) DESC;
--김수정-2

SELECT PCODE, CATEGORY, PNAME, PRICE, NAME, BUY_DATE
FROM TBL_PRODUCT
JOIN TBL_BUY USING(PCODE)
JOIN TBL_CUSTOM ON (CUSTOM_ID = CUSTOMID)
WHERE SUBSTR(BUY_DATE, 1,2) = 23
ORDER BY BUY_DATE ASC ;

--김우준-1
SELECT NAME, PNAME, EMAIL, PRICE*QUANTITY
FROM TBL_CUSTOM
JOIN TBL_BUY ON (CUSTOM_ID = CUSTOMID)
JOIN TBL_PRODUCT USING(PCODE)
WHERE SUBSTR(EMAIL, 1, INSTR(EMAIL, '@')) LIKE '%m%'
ORDER BY NAME;
--INSTR(EMAIL, '@')	@ 기호가 이메일에서 몇 번째 위치에 있는지 반환

--김우준-2

SELECT NAME, EXTRACT(YEAR FROM BUY_DATE),PNAME, PCODE
FROM TBL_CUSTOM
JOIN TBL_BUY ON (CUSTOM_ID = CUSTOMID)
JOIN TBL_PRODUCT USING(PCODE)
WHERE LENGTH(PCODE)=7;

--김윤정-1
SELECT NAME, EMAIL
FROM TBL_CUSTOM
JOIN TBL_BUY ON (CUSTOM_ID = CUSTOMID)
WHERE EXTRACT(YEAR FROM BUY_DATE) ='2023';

--김윤정-2
SELECT *
FROM (SELECT PNAME, SUM(QUANTITY*PRICE)
    FROM TBL_CUSTOM
    JOIN TBL_BUY ON (CUSTOM_ID = CUSTOMID)
    JOIN TBL_PRODUCT USING(PCODE)
    GROUP BY PNAME)
WHERE ROWNUM =1;

SELECT PNAME, SUM(QUANTITY*PRICE)
FROM TBL_CUSTOM
JOIN TBL_BUY ON (CUSTOM_ID = CUSTOMID)
JOIN TBL_PRODUCT USING(PCODE)
GROUP BY PNAME;

--김혜지-1 고객별, 상품별 누적 구매금액, 총 구매금액을 조회하세요.(단, 상품별 누적 구매 금액이 20000원 이상만 조회)
SELECT PNAME, NAME, SUM(QUANTITY*PRICE)
FROM TBL_CUSTOM
JOIN TBL_BUY ON (CUSTOM_ID = CUSTOMID)
JOIN TBL_PRODUCT USING(PCODE)
GROUP BY PNAME, NAME
HAVING SUM(QUANTITY*PRICE) >20000
UNION
SELECT NAME||' 총 누적금액', NAME, SUM(QUANTITY*PRICE) 
FROM TBL_CUSTOM
JOIN TBL_BUY ON (CUSTOM_ID = CUSTOMID)
JOIN TBL_PRODUCT USING(PCODE)
GROUP BY NAME
HAVING SUM(QUANTITY*PRICE) >20000
ORDER BY NAME,3 ;

--김혜지-2
SELECT NAME, PNAME, QUANTITY, BUY_DATE
FROM TBL_CUSTOM
JOIN TBL_BUY ON (CUSTOM_ID = CUSTOMID)
JOIN TBL_PRODUCT USING(PCODE)
WHERE CATEGORY = 'B1';

--어수용-1
---- 고객 추가 (나이 30 이상 + 이메일 도메인 'korea.com')
INSERT INTO TBL_CUSTOM VALUES ('user01', '김하나', 'hana@korea.com', 33, TO_DATE('2022
01-10','YYYY-MM-DD'));
INSERT INTO TBL_CUSTOM VALUES ('user02', '박둘이', 'park@korea.com', 45, TO_DATE('2021
05-03','YYYY-MM-DD'));
INSERT INTO TBL_CUSTOM VALUES ('user03', '이세영', 'sey@korea.com', 39, TO_DATE('2023
07-15','YYYY-MM-DD'));
INSERT INTO TBL_CUSTOM VALUES ('user04', '최철수', 'ccs@korea.com', 50, TO_DATE('2020
11-11','YYYY-MM-DD'));
INSERT INTO TBL_CUSTOM VALUES ('user05', '정미정', 'mj@naver.com', 28, TO_DATE('2022-04
04','YYYY-MM-DD')); -- 이 사람은 제외 대상
-- 구매 기록 없는 사람
INSERT INTO TBL_CUSTOM VALUES ('user06', '유공백', 'ygb@korea.com', 35, TO_DATE('2021
12-01','YYYY-MM-DD'));

-- 상품 추가 (다양한 가격대, 50,000 이상도 포함)
INSERT INTO TBL_PRODUCT VALUES ('ITEM001', 'B1', '라면세트', 9000);
INSERT INTO TBL_PRODUCT VALUES ('ITEM002', 'A2', '고급과일세트', 72000);
INSERT INTO TBL_PRODUCT VALUES ('ITEM003', 'A1', '사과박스', 33000);
INSERT INTO TBL_PRODUCT VALUES ('ITEM004', 'B2', '혼합간식세트', 51000);
INSERT INTO TBL_PRODUCT VALUES ('ITEM005', 'B1', '쌀10kg', 58000);

-- 구매 내역 추가 (2024년 이후 + 수량 총합 >= 3)
-- user01
INSERT INTO TBL_BUY VALUES (2001, 'user01', 'ITEM001', 2, TO_DATE('2024-01-15', 'YYYY
MM-DD'));
INSERT INTO TBL_BUY VALUES (2002, 'user01', 'ITEM002', 2, TO_DATE('2024-02-10', 'YYYY
MM-DD'));

-- user02
INSERT INTO TBL_BUY VALUES (2003, 'user02', 'ITEM003', 1, TO_DATE('2024-03-05', 'YYYY
MM-DD'));
INSERT INTO TBL_BUY VALUES (2004, 'user02', 'ITEM004', 3, TO_DATE('2024-03-05', 'YYYY
MM-DD'));

-- user03
INSERT INTO TBL_BUY VALUES (2005, 'user03', 'ITEM005', 3, TO_DATE('2024-01-03', 'YYYY
MM-DD'));

-- user04
INSERT INTO TBL_BUY VALUES (2006, 'user04', 'ITEM002', 1, TO_DATE('2024-04-04', 'YYYY
MM-DD'));
INSERT INTO TBL_BUY VALUES (2007, 'user04', 'ITEM005', 3, TO_DATE('2024-04-10', 'YYYY
MM-DD'));

-- user05 (제외 대상이지만 데이터 넣어둠)
INSERT INTO TBL_BUY VALUES (2008, 'user05', 'ITEM001', 1, TO_DATE('2024-05-01', 'YYYY
MM-DD'));

COMMIT;

--1번 문제
--TBL_BUY 테이블에서 2024년 1월 1일 이후에 구매한 고객 중. 구매 수량 총합이 3개 이상인 고객의 CUSTOMID, 고객 이름(NAME), 해당 고객이 구매한 상품 종류 수(중복 없는 상품 개수)를 출력하시오. (단, 구매 수량 총합 내림차순으로 정렬할 것)

SELECT CUSTOM_ID, NAME, COUNT(DISTINCT PNAME)
FROM TBL_CUSTOM
JOIN TBL_BUY ON (CUSTOM_ID = CUSTOMID)
JOIN TBL_PRODUCT USING(PCODE)
WHERE EXTRACT(YEAR FROM BUY_DATE)IN('2024','2025','2026')
GROUP BY NAME, CUSTOM_ID
HAVING SUM(QUANTITY )>=3
ORDER BY SUM(QUANTITY ) DESC;

--어수용-2
/*
TBL_CUSTOM 테이블에서 나이(AGE)가 30세 이상인 고객 중.
이메일 주소가 ''korea.com' 도메인을 포함하는 
고객의 CUSTOM_ID, NAME, EMAIL, AGE와 
해당 고객들이 최근 구매한 날짜(BUY_DATE)를 출력하고, 
만약 구매 기록이 없으면 '구매기록없음'으로 표시하시오.
(단 결과는 나이 내림차순, 이름 오름차순으로 정렬할 것)
*/
SELECT CUSTOM_ID, NAME, EMAIL, AGE, MAX(BUY_DATE)
FROM TBL_CUSTOM
LEFT JOIN TBL_BUY ON (CUSTOM_ID = CUSTOMID)
JOIN TBL_PRODUCT USING(PCODE)
WHERE AGE >=30
GROUP BY CUSTOM_ID, NAME, EMAIL,AGE
ORDER BY AGE DESC, NAME ASC;

--박찬형-1
SELECT NAME, PNAME, QUANTITY
FROM TBL_CUSTOM
JOIN TBL_BUY ON (CUSTOM_ID = CUSTOMID)
JOIN TBL_PRODUCT USING(PCODE)
WHERE EXTRACT(YEAR FROM BUY_DATE) ='2023';

--박찬형-2
SHOW USER;
GRANT CREATE VIEW TO HCLASS;
CREATE VIEW VW_TBL
AS SELECT NAME, PNAME, QUANTITY, TO_CHAR(BUY_DATE, 'YYYY"년,"MM"월,"DD"년"') as"구매일"
    FROM TBL_CUSTOM
    JOIN TBL_BUY ON (CUSTOM_ID = CUSTOMID)
    JOIN TBL_PRODUCT USING(PCODE);
SELECT * FROM VW_TBL;
    
--박현아-1
SELECT PNAME, PCODE
FROM TBL_CUSTOM
JOIN TBL_BUY ON (CUSTOM_ID = CUSTOMID)
JOIN TBL_PRODUCT USING(PCODE)
WHERE NOT EXTRACT(YEAR FROM BUY_DATE) ='2023'
ORDER BY PCODE;
--박현아-2
SELECT
    ROUND((SELECT SUM(QUANTITY)
        FROM TBL_BUY
        WHERE SUBSTR(BUY_IDX,4,1) IN ('2','4','6','8','0'))/
        (SELECT SUM(QUANTITY)
        FROM TBL_BUY)*100,1)||'%' AS 비율
FROM DUAL;
--백가영-1
SELECT PNAME, SUM(QUANTITY*PRICE)
FROM TBL_CUSTOM
JOIN TBL_BUY ON (CUSTOM_ID = CUSTOMID)
JOIN TBL_PRODUCT USING(PCODE)
WHERE EXTRACT(YEAR FROM REG_DATE)=2021
GROUP BY PNAME
ORDER BY SUM(QUANTITY*PRICE) DESC;
--백가영-2
SELECT AVG(AGE)
FROM (SELECT AGE
FROM TBL_CUSTOM
JOIN TBL_BUY ON (CUSTOM_ID = CUSTOMID)
JOIN TBL_PRODUCT USING(PCODE)
GROUP BY BUY_DATE,AGE
HAVING SUM(QUANTITY)>=3)
;
--조민준-1
SELECT NAME, PNAME, QUANTITY
FROM TBL_CUSTOM
JOIN TBL_BUY ON (CUSTOM_ID = CUSTOMID)
JOIN TBL_PRODUCT USING(PCODE)
WHERE EMAIL LIKE '%daum%' ;

--조민준-2
SELECT NAME,AGE
FROM TBL_CUSTOM;

UPDATE TBL_CUSTOM 
SET AGE = 24
WHERE NAME ='이나나';

--최재홍-1
SELECT NAME, PNAME
FROM TBL_CUSTOM
JOIN TBL_BUY ON (CUSTOM_ID = CUSTOMID)
JOIN TBL_PRODUCT USING(PCODE)
WHERE EXTRACT(YEAR FROM BUY_DATE) IN('2022','2024');

--최재홍-2
SELECT NAME, PNAME
FROM TBL_CUSTOM
JOIN TBL_BUY ON (CUSTOM_ID = CUSTOMID)
JOIN TBL_PRODUCT USING(PCODE)
WHERE CATEGORY LIKE 'A%';

--한다은-1
SELECT *
FROM (SELECT PNAME, NAME, BUY_DATE
FROM TBL_CUSTOM
JOIN TBL_BUY ON (CUSTOM_ID = CUSTOMID)
JOIN TBL_PRODUCT USING(PCODE)
ORDER BY BUY_DATE DESC)
WHERE ROWNUM =1;
--한다은-2
SELECT PCODE, PNAME , AVG(QUANTITY)
FROM TBL_CUSTOM
JOIN TBL_BUY ON (CUSTOM_ID = CUSTOMID)
JOIN TBL_PRODUCT USING(PCODE)
GROUP BY PNAME,PCODE 
HAVING AVG(QUANTITY)>=2;

--홍세민-1
SELECT PNAME, NAME, QUANTITY
FROM TBL_CUSTOM
JOIN TBL_BUY ON (CUSTOM_ID = CUSTOMID)
JOIN TBL_PRODUCT USING(PCODE)
WHERE PCODE LIKE '%N%';

--홍세민-2
SELECT NAME, EMAIL
FROM TBL_CUSTOM
JOIN TBL_BUY ON (CUSTOM_ID = CUSTOMID)
JOIN TBL_PRODUCT USING(PCODE)
GROUP BY NAME, EMAIL
HAVING SUM(QUANTITY*PRICE) >100000;

--오세욱-1

SELECT EXTRACT(YEAR FROM BUY_DATE)||'년도'||COUNT(DISTINCT NAME)||'명'
FROM TBL_CUSTOM
JOIN TBL_BUY ON (CUSTOM_ID = CUSTOMID)
JOIN TBL_PRODUCT USING(PCODE) 
WHERE EXTRACT(YEAR FROM BUY_DATE)=2023
GROUP BY EXTRACT(YEAR FROM BUY_DATE);

--오세욱-2
SELECT NAME
FROM TBL_CUSTOM
JOIN TBL_BUY ON (CUSTOM_ID = CUSTOMID)
JOIN TBL_PRODUCT USING(PCODE) 
WHERE PNAME LIKE  '%청송사과%'
AND QUANTITY =2 AND  AGE=20;

--박선일-1
SELECT *
FROM (SELECT PNAME, (COUNT(BUY_IDX) * 10000) + SUM(QUANTITY * (PRICE + 2000)) AS "손실 금액"
FROM TBL_BUY
JOIN TBL_PRODUCT USING(PCODE)
WHERE CATEGORY LIKE 'B%'
AND BUY_DATE BETWEEN ADD_MONTHS('24/02/10', -2) AND '24/02/10'
GROUP BY PNAME
ORDER BY "손실 금액" DESC)
WHERE ROWNUM <= 2;

--박선일-2 
SELECT 
  L.NAME,
  ROUND((H.연평균 - L.연평균) * L.연수) AS "구매해야할 금액"
FROM 
(
  SELECT *
  FROM (
    SELECT 
      C.NAME,
      NVL(SUM(B.QUANTITY * P.PRICE), 0) AS 총구매,
      CEIL(MONTHS_BETWEEN(SYSDATE, C.REG_DATE - 1) / 12) AS 연수,
      NVL(SUM(B.QUANTITY * P.PRICE), 0) / 
      CEIL(MONTHS_BETWEEN(SYSDATE, C.REG_DATE - 1) / 12) AS 연평균
    FROM TBL_CUSTOM C
    LEFT JOIN TBL_BUY B ON B.CUSTOMID = C.CUSTOM_ID
    LEFT JOIN TBL_PRODUCT P ON B.PCODE = P.PCODE
    GROUP BY C.NAME, C.REG_DATE
    ORDER BY 연평균 ASC
  )
  WHERE ROWNUM = 1
) L,
(
  SELECT *
  FROM (
    SELECT 
      NVL(SUM(B.QUANTITY * P.PRICE), 0) / 
      CEIL(MONTHS_BETWEEN(SYSDATE, C.REG_DATE - 1) / 12) AS 연평균
    FROM TBL_CUSTOM C
    LEFT JOIN TBL_BUY B ON B.CUSTOMID = C.CUSTOM_ID
    LEFT JOIN TBL_PRODUCT P ON B.PCODE = P.PCODE
    GROUP BY C.NAME, C.REG_DATE
    ORDER BY 연평균 DESC
  )
  WHERE ROWNUM = 1
) H;



--한다현-1
SELECT * 
FROM (
SELECT NAME, EMAIL, SUM(QUANTITY*PRICE),SUM(QUANTITY)
FROM TBL_CUSTOM
JOIN TBL_BUY ON (CUSTOM_ID = CUSTOMID)
JOIN TBL_PRODUCT USING(PCODE) 
WHERE EXTRACT(YEAR FROM REG_DATE) < 2024
GROUP BY NAME, EMAIL
ORDER BY SUM(QUANTITY)DESC)
WHERE ROWNUM =1;

--한다현-2
INSERT INTO TBL_CUSTOM VALUES('huntrix', '김루미', 'rumi@gmail.com', 20, DEFAULT);   
INSERT INTO TBL_BUY VALUES(9000, 'huntrix', 'DOWON123A', 5, SYSDATE);
SELECT NAME, EMAIL, SUM(QUANTITY), SUM(QUANTITY*PRICE)
FROM TBL_CUSTOM
JOIN TBL_BUY ON (CUSTOM_ID = CUSTOMID)
JOIN TBL_PRODUCT USING(PCODE) 
WHERE EXTRACT(YEAR FROM REG_DATE) < 2024
GROUP BY NAME, EMAIL
ORDER BY SUM(QUANTITY)DESC;

