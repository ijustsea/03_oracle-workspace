-- 기존 테이블 삭제
DROP TABLE TBL_BUY CASCADE CONSTRAINTS;
DROP TABLE TBL_PRODUCT CASCADE CONSTRAINTS;
DROP TABLE TBL_CUSTOM CASCADE CONSTRAINTS;


-- 고객 테이블
CREATE TABLE TBL_CUSTOM (
	CUSTOM_ID VARCHAR2(20) PRIMARY KEY ,  
	NAME VARCHAR2(40) NOT NULL,		
	EMAIL VARCHAR2(40),
	AGE NUMBER(3) DEFAULT 0,
	REG_DATE DATE DEFAULT SYSDATE 
);

COMMENT ON COLUMN TBL_CUSTOM.CUSTOM_ID IS '고객아이디';
COMMENT ON COLUMN TBL_CUSTOM.NAME IS '고객이름';
COMMENT ON COLUMN TBL_CUSTOM.EMAIL IS '이메일';
COMMENT ON COLUMN TBL_CUSTOM.AGE IS '나이';
COMMENT ON COLUMN TBL_CUSTOM.REG_DATE IS '회원가입일';

INSERT INTO TBL_CUSTOM 
VALUES ( 'mina012', '김미나', 'kimm@gmail.com', 20, TO_DATE('2022-03-10 14:23:25','yyyy-mm-dd hh24:mi:ss'));
INSERT INTO TBL_CUSTOM 
VALUES ('hongGD', '홍길동', 'gil@korea.com', 32, TO_DATE('2021-10-21 11:12:23','yyyy-mm-dd hh24:mi:ss'));
INSERT INTO TBL_CUSTOM 
VALUES ( 'twice', '박모모', 'momo@daum.net', 29, TO_DATE('2021-12-25 19:23:45','yyyy-mm-dd hh24:mi:ss'));
INSERT INTO TBL_CUSTOM (CUSTOM_ID, NAME, EMAIL)
VALUES ( 'wonder', '이나나', 'lee@naver.com');

-- 상품 테이블 

CREATE TABLE TBL_PRODUCT(
	PCODE VARCHAR2(20) PRIMARY KEY ,
	CATEGORY CHAR(2) NOT NULL,
	PNAME VARCHAR2(40) NOT NULL,
	PRICE NUMBER(9) NOT NULL 
);
COMMENT ON COLUMN TBL_PRODUCT.PCODE IS '상품코드';
COMMENT ON COLUMN TBL_PRODUCT.CATEGORY IS '카테고리';
COMMENT ON COLUMN TBL_PRODUCT.PNAME IS '상품명';
COMMENT ON COLUMN TBL_PRODUCT.PRICE IS '가격';

INSERT INTO TBL_PRODUCT TP 
VALUES ('DOWON123A', 'B2', '동원참치선물세트', 54000);
INSERT INTO TBL_PRODUCT TP 
VALUES ('CJBAB12G', 'B1', '햇반 12개입', 14500);
INSERT INTO TBL_PRODUCT TP 
VALUES ('JINRMN5', 'B1', '진라면 5개입', 6350);
INSERT INTO TBL_PRODUCT TP 
VALUES ('APLE5KG', 'A1', '청송사과 5kg', 66000);
INSERT INTO TBL_PRODUCT TP 
VALUES ('MANGOTK4R', 'A2', '애플망고 1kg', 32000);


-- 구매 테이블 
CREATE TABLE TBL_BUY(
	BUY_IDX NUMBER(8) PRIMARY KEY ,		
	CUSTOMID VARCHAR2(20) NOT NULL ,		
	PCODE VARCHAR2(20) NOT NULL ,
	QUANTITY NUMBER(5) DEFAULT 1 ,		
	BUY_DATE DATE,
    FOREIGN KEY (CUSTOMID) REFERENCES TBL_CUSTOM(CUSTOM_ID),
	FOREIGN KEY (PCODE) REFERENCES TBL_PRODUCT(PCODE)
);
COMMENT ON COLUMN TBL_BUY.BUY_IDX IS '주문번호';
COMMENT ON COLUMN TBL_BUY.CUSTOMID IS '고객아이디';
COMMENT ON COLUMN TBL_BUY.PCODE IS '상품명';
COMMENT ON COLUMN TBL_BUY.QUANTITY IS '상품수량';
COMMENT ON COLUMN TBL_BUY.BUY_DATE IS '구매일자';


INSERT INTO TBL_BUY 
VALUES (1001, 'mina012' , 'CJBAB12G' , 5, TO_DATE('2022-03-10 14:33:15','yyyy-mm-dd hh24:mi:ss'));
INSERT INTO TBL_BUY 
VALUES (1002, 'mina012' , 'APLE5KG' , 2, TO_DATE('2023-11-10 14:33:15','yyyy-mm-dd hh24:mi:ss'));
INSERT INTO TBL_BUY 
VALUES (1003, 'mina012' , 'JINRMN5' , 2, TO_DATE('2023-12-09 14:33:15','yyyy-mm-dd hh24:mi:ss'));
INSERT INTO TBL_BUY 
VALUES (1004, 'twice' , 'JINRMN5' , 3 , TO_DATE('2023-12-21 14:33:15','yyyy-mm-dd hh24:mi:ss'));
INSERT INTO TBL_BUY 
VALUES (1005, 'twice' , 'MANGOTK4R' , 2 , TO_DATE('2024-01-10 14:33:15','yyyy-mm-dd hh24:mi:ss'));
INSERT INTO TBL_BUY 
VALUES (1006, 'hongGD' , 'DOWON123A' , 1 , TO_DATE('2024-01-13 14:33:15','yyyy-mm-dd hh24:mi:ss'));
INSERT INTO TBL_BUY 
VALUES (1007,  'hongGD' , 'APLE5KG' , 1 , TO_DATE('2023-09-09 14:33:15','yyyy-mm-dd hh24:mi:ss'));

COMMIT;

/* A조  */
--A-1. 'mina012' 가 구매한 상품 금액 합계(이광원)
SELECT SUM(QUANTITY *PRICE)
FROM TBL_BUY
JOIN TBl_PRODUCT USING(PCODE)
WHERE CUSTOMID= 'mina012'
GROUP BY CUSTOMID;	  

--A-2. 이름에 '길동'이 들어가는 회원 구매한 상품 구매현황 (권태윤)
-- 데이터 추가 후 실행하세요.
INSERT INTO TBL_CUSTOM 
			VALUES ('dongL','이길동','lee@daum.net',25,sysdate);
INSERT INTO TBL_BUY 
			VALUES (1008,'dongL','DOWON123A',2,sysdate);
COMMIT;

SELECT PNAME, QUANTITY *PRICE, NAME
FROM TBL_CUSTOM
JOIN TBL_BUY ON (CUSTOM_ID = CUSTOMID)
JOIN TBl_PRODUCT USING(PCODE)
WHERE NAME LIKE '%길동%';
            
            
--A-3. `25살`이상 고객님들의 `구매`한 `상품명` 조회하기 (강주찬) => 테이블 3개

SELECT PNAME, NAME
FROM TBL_CUSTOM
JOIN TBL_BUY ON (CUSTOM_ID = CUSTOMID)
JOIN TBl_PRODUCT USING(PCODE)
WHERE AGE >=25;

--A-4. 상품명에 '사과' 단어가 포함된 상품을 구매한 고객에 대해 상품별 구매금액의 합을 구하기.(고길현)
-- 데이터 추가 후 실행하세요.
INSERT INTO TBL_PRODUCT
			VALUES ('BUSA211','B2','부사 사과 3kg 박스',25000);
INSERT INTO TBL_BUY  
			VALUES (1009,'hongGD','BUSA211',2,TO_date('2024-01-03','yyyy-mm-dd'));

COMMIT;

SELECT PNAME ,QUANTITY *PRICE, NAME
FROM TBL_CUSTOM
JOIN TBL_BUY ON (CUSTOM_ID = CUSTOMID)
JOIN TBl_PRODUCT USING(PCODE)
WHERE PNAME LIKE '%사과%';

--A-5. 총 구매합산 금액이 100000~200000 값인 고객 ID를 조회하시오.(김태완)

SELECT CUSTOMID
FROM TBL_BUY
JOIN TBl_PRODUCT USING(PCODE)
GROUP BY CUSTOMID
HAVING SUM(QUANTITY *PRICE) BETWEEN 100000 AND 200000;

/*  B조 */
--B-1. 20대 나이 고객의 구매 상품 코드와 나이를 나이순으로 정렬 조회 (이대환)
SELECT PCODE, AGE 
FROM TBL_CUSTOM
JOIN TBL_BUY ON (CUSTOM_ID = CUSTOMID)
JOIN TBl_PRODUCT USING(PCODE)
WHERE AGE BETWEEN 20 AND 29
ORDER BY AGE ;
--B-2. 나이가 가장 많은 고객이 상품을 구매한 횟수를 조회하세요.-서브쿼리 사용하기 (김승한)

--나이가 가장 많은 고객의 상품구매횟수 조회

SELECT NAME, AGE,SUM(QUANTITY)
FROM TBL_CUSTOM
JOIN TBL_BUY ON (CUSTOM_ID = CUSTOMID)
JOIN TBl_PRODUCT USING(PCODE)
GROUP BY NAME, AGE
ORDER BY AGE DESC;

SELECT *
FROM (SELECT NAME, AGE,SUM(QUANTITY)
        FROM TBL_CUSTOM
        JOIN TBL_BUY ON (CUSTOM_ID = CUSTOMID)
        JOIN TBl_PRODUCT USING(PCODE)
        GROUP BY NAME, AGE
        ORDER BY AGE DESC)
WHERE ROWNUM =1;

--B-3. 2023년 하반기 구매금액을 고객ID별로 조회하시오. 금액이 높은 순서부터 조회하세요. (노희영)

SELECT CUSTOMID, SUM(QUANTITY *PRICE)
FROM TBL_CUSTOM
JOIN TBL_BUY ON (CUSTOMID = CUSTOM_ID)
JOIN TBl_PRODUCT USING(PCODE)
WHERE EXTRACT(MONTH FROM BUY_DATE) BETWEEN 7 AND 12
AND EXTRACT(YEAR FROM BUY_DATE) =2023
GROUP BY CUSTOM_ID
ORDER BY SUM(QUANTITY *PRICE);

--B-4. 2024년에 구매횟수가 1회 이상인 고객id, 고객이름, 나이,이메일을 조회하세요.(이재훈)

SELECT CUSTOMID, NAME, AGE, EMAIL
FROM  TBL_CUSTOM
JOIN TBL_BUY ON (CUSTOMID = CUSTOM_ID)
WHERE EXTRACT(YEAR FROM BUY_DATE) =2024
GROUP BY NAME, CUSTOMID, AGE, EMAIL, EXTRACT(YEAR FROM BUY_DATE);


--B-5. 고객별-상품별 구매금액을 조회하세요. 정렬도 고객ID,상품코드 오름차순으로 정렬하세요.(이예진)

SELECT CUSTOMID, PNAME ,SUM(QUANTITY *PRICE)AS 구매금액
FROM TBL_CUSTOM
JOIN TBL_BUY ON (CUSTOMID = CUSTOM_ID)
JOIN TBl_PRODUCT USING(PCODE)
GROUP BY CUSTOMID, PNAME
ORDER BY CUSTOMID, PNAME;


/* C조 */
--C-1. 가격 1만원 이상의 상품에 대해 각각 고객들이 구매한 평균 개수를 출력하시오.상품코드 순서로 정렬 (임현범)

SELECT PCODE,SUM(QUANTITY)/COUNT(NAME)
FROM TBL_CUSTOM
JOIN TBL_BUY ON (CUSTOMID = CUSTOM_ID)
JOIN TBl_PRODUCT USING(PCODE)
WHERE PRICE>10000 
GROUP BY PCODE
ORDER BY PCODE;	 
	 
--C-2. 진라면을 구매한 고객의 이름, 구매수량, 구매날짜를 조회하자. (출제자 : 전예진)

--진라면 PCODE머임?
SELECT DISTINCT PCODE
FROM TBL_BUY
JOIN TBL_PRODUCT USING(PCODE)
WHERE PNAME LIKE '%진라면%';

SELECT NAME, QUANTITY, BUY_DATE
FROM TBL_BUY
JOIN TBL_CUSTOM ON (CUSTOMID=CUSTOM_ID)
WHERE PCODE =(SELECT DISTINCT PCODE
FROM TBL_BUY
JOIN TBL_PRODUCT USING(PCODE)
WHERE PNAME LIKE '%진라면%'); 

--C-4. 2023년에 팔린 상품의 이름과 코드, 총 판매액 그리고 총 판매개수를 상품코드 순서로 정렬하여 조회하시오. (정제원)

SELECT PNAME, PCODE,SUM(QUANTITY *PRICE), SUM(QUANTITY)
FROM TBL_CUSTOM
JOIN TBL_BUY ON (CUSTOMID = CUSTOM_ID)
JOIN TBl_PRODUCT USING(PCODE)
WHERE EXTRACT(YEAR FROM BUY_DATE) =2023
GROUP BY PCODE, PNAME;

--C-5. 'twice'와 'hongGD'는 한집에 살고 있습니다. 이들이 구매한 상품,수량,가격을 조회하세요.-가격이 높은순서부터 정렬 (장성우)
SELECT PNAME, QUANTITY, PRICE, CUSTOM_ID
FROM TBL_BUY
JOIN TBL_CUSTOM ON (CUSTOM_ID = CUSTOMID)
JOIN TBl_PRODUCT USING(PCODE)
WHERE CUSTOM_ID IN ('twice','hongGD')
ORDER BY PRICE DESC;



/* D조 */
--D-1. 진라면을 가장 많이 구매한 회원을 구매금액이 높은 순으로 회원아이디와 총 진라면 구매금액을 보여주세요.(조하연)
-- 							ㄴ 서브쿼리 없이 조인만 사용
SELECT CUSTOMID, PRICE*QUANTITY
FROM TBL_BUY
JOIN TBl_PRODUCT USING(PCODE)
WHERE PNAME LIKE '%진라면%'
GROUP BY CUSTOMID,PRICE*QUANTITY
ORDER BY PRICE*QUANTITY DESC ;

 
--D-2. 판매 갯수가 가장 많은 순서로 상품 을 정렬하고 총 팔린 금액을 출력하시오.(한진만)
-- 	   판매 개수가 같으면 상품 코드 순서로 정렬합니다.			ㄴ 동등 조인으로 조회

SELECT PNAME, SUM(QUANTITY*PRICE)
FROM TBL_PRODUCT P, TBL_BUY B
WHERE P.PCODE = B.PCODE
GROUP BY PNAME, P.PCODE
ORDER BY SUM(QUANTITY) DESC, P.PCODE ASC;


--D-3. 진라면을 구매한 고객들의 평균 나이를 제품코드(PCODE)와 함께출력해 주세요.(황병훈)
SELECT PCODE, AGE
FROM TBL_BUY
JOIN TBl_PRODUCT USING(PCODE)
JOIN TBL_CUSTOM ON (CUSTOMID= CUSTOM_ID)
WHERE PNAME LIKE '%진라면%'
ORDER BY PRICE*QUANTITY DESC ;



--D-4. 30세 미만 회원별 구매금액을 구하고 회원으로 그룹바이해서 구매금액 합계가 큰 순으로 정렬(조지수)
-- 						ㄴ 3개의 테이블 조인

SELECT AGE, SUM(QUANTITY*PRICE)
FROM TBL_BUY
JOIN TBL_CUSTOM ON (CUSTOM_ID = CUSTOMID)
JOIN TBl_PRODUCT USING(PCODE)
WHERE AGE <=30
GROUP BY AGE
ORDER BY SUM(QUANTITY*PRICE) DESC ;

--내가 만든 쿠키 아닌 문제

--이메일을 daum으로 쓰지않는  사람들의 평균 나이를 구하시오  ( 나이가 0인 경우 제외)
SELECT ROUND(AVG(AGE),1)
FROM TBL_CUSTOM 
WHERE not EMAIL LIKE '%daum%' 
AND AGE ^=0;

--홍길동씨와 박모모씨가 사실 연인관계라고 한다 이 커플의 구매 총액은 ?

SELECT SUM(QUANTITY * PRICE) AS 커플총구매액
FROM TBL_BUY
JOIN TBL_CUSTOM ON (CUSTOM_ID = CUSTOMID)
JOIN TBL_PRODUCT USING(PCODE)
WHERE NAME IN ('홍길동', '박모모');








